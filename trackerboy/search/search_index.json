{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Trackerboy Trackerboy is a cross-platform music tracker for creating Gameboy music. This documentation serves as the user manual for the program, as well as a primer on the gameboy sound hardware. Quick links The program's interface Details about the tracker A primer on the hardware Effect list Shortcuts Frequently asked questions (FAQ) Change log Contact / Support If you need help feel free to join the official trackerboy discord and ask your question in the #help channel. You can also contact me via email or twitter. Discord : https://discord.gg/m6wcAK3 Website : https://stoneface86.github.com/trackerboy Email : stoneface8086 @ gmail.com (Please include \"trackerboy\" in the subject line) Twitter : @stoneface86","title":"Home"},{"location":"#welcome-to-trackerboy","text":"Trackerboy is a cross-platform music tracker for creating Gameboy music. This documentation serves as the user manual for the program, as well as a primer on the gameboy sound hardware.","title":"Welcome to Trackerboy"},{"location":"#quick-links","text":"The program's interface Details about the tracker A primer on the hardware Effect list Shortcuts Frequently asked questions (FAQ) Change log","title":"Quick links"},{"location":"#contact-support","text":"If you need help feel free to join the official trackerboy discord and ask your question in the #help channel. You can also contact me via email or twitter. Discord : https://discord.gg/m6wcAK3 Website : https://stoneface86.github.com/trackerboy Email : stoneface8086 @ gmail.com (Please include \"trackerboy\" in the subject line) Twitter : @stoneface86","title":"Contact / Support"},{"location":"faq/","text":"Frequently asked questions The following are some answers to some common questions about Trackerboy. General How do I get started? You could create some instruments, make a couple for each channel to explore the hardware's capabilities. Or you can dive right in and start entering notes on the pattern. Unlike some other trackers, instruments are 100% optional (but recommended!) to make music. Is there a macOS release? Currently no, I do not provide macOS releases as I cannot test them. You can build from source or use the windows release via WINE. If you do use WINE, change the audio API in the Sound / Midi configuration to DirectSound or WinMM as the WASAPI backend does not work in WINE. A button I want to use is grayed out, what do I do? The feature you are attempting to use is most likely not implemented at this time, you will have to wait for a newer release. Editing How do I enter notes? Focus on the pattern editor and hit Space to toggle record mode, the cursor row will change color to red when in record mode. You can now enter notes using your keyboard. How do I play and loop a single pattern? Select the pattern you want to play and enable repeat-mode (Tracker > Pattern repeat), then play the song. I don't have a QWERTY keyboard, can I change the default layout? Yes, open the configuration (File > Configuration) and select the Keyboard tab. You can choose your layout in the combobox or setup a custom one if yours is not provided. Why are the notes on CH3 one octave lower? CH3's frequency range is one octave lower than the pulse channels if you have a single period waveform. Notes in trackerboy are based on the octave range of the pulse channels. See Hardware Primer/Wave channel for more details. Troubleshooting Sound is stuttering or clicking. The buffer length is too short, and underruns are occuring. Check your sound settings, gradually increase the buffer size until the problem is fixed. Also make sure that the buffer size is at least twice the size of the period. There's no sound. Try a different device and/or api in the sound settings. My device disconnected and the tracker won't stop playing. Kill sound (Tracker > Kill Sound) and select a new device in the audio settings or the same device after reconnecting it.","title":"FAQ"},{"location":"faq/#frequently-asked-questions","text":"The following are some answers to some common questions about Trackerboy.","title":"Frequently asked questions"},{"location":"faq/#general","text":"How do I get started? You could create some instruments, make a couple for each channel to explore the hardware's capabilities. Or you can dive right in and start entering notes on the pattern. Unlike some other trackers, instruments are 100% optional (but recommended!) to make music. Is there a macOS release? Currently no, I do not provide macOS releases as I cannot test them. You can build from source or use the windows release via WINE. If you do use WINE, change the audio API in the Sound / Midi configuration to DirectSound or WinMM as the WASAPI backend does not work in WINE. A button I want to use is grayed out, what do I do? The feature you are attempting to use is most likely not implemented at this time, you will have to wait for a newer release.","title":"General"},{"location":"faq/#editing","text":"How do I enter notes? Focus on the pattern editor and hit Space to toggle record mode, the cursor row will change color to red when in record mode. You can now enter notes using your keyboard. How do I play and loop a single pattern? Select the pattern you want to play and enable repeat-mode (Tracker > Pattern repeat), then play the song. I don't have a QWERTY keyboard, can I change the default layout? Yes, open the configuration (File > Configuration) and select the Keyboard tab. You can choose your layout in the combobox or setup a custom one if yours is not provided. Why are the notes on CH3 one octave lower? CH3's frequency range is one octave lower than the pulse channels if you have a single period waveform. Notes in trackerboy are based on the octave range of the pulse channels. See Hardware Primer/Wave channel for more details.","title":"Editing"},{"location":"faq/#troubleshooting","text":"Sound is stuttering or clicking. The buffer length is too short, and underruns are occuring. Check your sound settings, gradually increase the buffer size until the problem is fixed. Also make sure that the buffer size is at least twice the size of the period. There's no sound. Try a different device and/or api in the sound settings. My device disconnected and the tracker won't stop playing. Kill sound (Tracker > Kill Sound) and select a new device in the audio settings or the same device after reconnecting it.","title":"Troubleshooting"},{"location":"about/changelog/","text":"[Unreleased] Added Command line argument parsing, you can now open a module on application startup General tab in Config dialog for changing basic settings. Appearance tab in Config dialog for changing fonts, colors and other settings Keyboard tab in Config dialog for changing keyboard layout and editing keybinds, as well as shortcut key sequences. Colors for the audio scope and graph editors are now customizable Autosave. Disabled by default, enable in the General tab in Config. Jxy effect for setting the global volume scale. Menu action in Tracker for reseting the global volume (Tracker|Reset global volume) Context menu for pattern editor Action for replacing all selected instrument columns with the current instrument (Edit|Replace instrument) Changed Combined the Sound and Midi tabs in the Configuration dialog (Sound + MIDI) AZERTY keyboard layout uses French AZERTY QWERTZ keyboard layout uses German T3 CascadiaMono is no longer the default font (Windows) Consolas is now the default font, falling back to Courier New if not available No longer using dock widgets, Instruments + Waveforms are now located to the right of the pattern editor. Pattern editor row numbers can be displayed in decimal (default is hexadecimal) Cursor wrap can now be disabled in General settings Hxx effect (set sweep register) now works. Crash save filename no longer using colons in the timestamp (this resulted in using an illegal filename on windows). Fixed Issue with Instrument Editor not properly updating when changing instruments Hitting enter in the sequence editor line edit opens the Wave editor Bug when saving a new module overwrites the last opened one instead of prompting the user for a new location. Removed Synthesizer quality setting in Sound configuration [0.5.0] - 2021-09-10 Added Instrument + Waveform list views for selecting/adding instruments/waveforms Effect columns can now be hidden/added for each track Multiple song support, modules can now store 1-256 songs Backwards compatibilty for 0.0 (Rev A) modules Tempo calculator dialog (Song > Tempo calculator...) Crash handler. Attempts to save a copy of the module after a fatal error Module properties dialog for editing the song list, module information and framerate/system. Song next/previous actions for changing the current song Song selector in Sidebar for selecting the current song Comments dialog for editing module comments File menu now shows a list of recently opened/saved modules Changed Back to using miniaudio instead of RtAudio for audio playback Trackerboy is now SDI instead of MDI (only one module can be open at a time). Initial window size is set to a maximum of 1280x720 Module file format is now at 1.0 (Rev B) Config file is now more human friendly Redesigned header for the pattern editor Reduced spacing between columns in pattern editor Rewrote OrderEditor using a custom widget instead of QTableView + OrderModel Instrument and Waveform editors are now dialogs instead of docks. Octave decrease/increase shortcut changed from numpad / * to Ctrl+[ and Ctrl+] Fixed issue #2 - Exx not taking immediate effect (also fixes V0x and I0x not taking immediate effect as well) issue #3 - PulseAudio hang Removed Module tree view (replaced by instrument and waveform docks) Instrument select toolbar (functionality replaced by selecting an instrument in the instruments dock) Patterns and Tempo spinboxes in Song settings editor [0.4.0] - 2021-07-07 Added MIDI support. You can now use a MIDI input device to input notes / preview instruments Order editor has increment/decrement and set operations again Oscilloscope visualizer Icons for cut/copy/paste Changed 32-bit builds are now supported Using RtAudio instead of miniaudio for audio playback Some improvements to the audio diagnostics dialog Fxx effect changes the speed immediately now (previously it only took effect on the next row) Status bar is now updated with speed/tempo, time elapsed and position of current song being played. Cursor row is locked when playing in follow-mode Selecting an order while playing in follow-mode jumps to it Fixed Crash when creating new module on linux Copy/Paste bugs when copying effect columns [0.3.1] - 2021-06-23 Changed Play and stop shortcut only triggers when pattern editor has focus Fixed Note previews not working right on CH4 Current track not updating in order editor [0.3.0] - 2021-06-22 Added Note previews when inputting notes in the pattern editor Pattern repeat mode Step mode playback Input toolbar (set the octave and edit step) Instrument toolbar (combobox for the current instrument) Song menu, contains actions for adding/removing orders Sidebar widget, combines song settings + order editor Icon for configuration Keybinds for tracker actions (play, stop, etc) Add \"play and stop\" shortcut (pressing enter plays, pressing it again stops) Changed No longer need to have record mode on when deleting, transposing, etc (record mode now only applies to setting notes, instruments and effects) Arpeggio editor graph is now centered at 0 Moved stuff from PatternEditor to separate toolbars Renamed Delete action in Edit menu to Erase View menu is now between Tracker and Window Fix \"set volume on trigger\" checkbox not updating when changing instruments Fix pattern previews not showing up on module load Fix order move up/down actions not disabling/enabling when user changes patterns Setting a note cut does not set the instrument column Removed PatternEditor toolbar (now is part of the main application toolbar) Order increment/decrement and set controls [0.2.0] - 2021-06-15 The project has changed dramatically since the last release so changes will not be listed for this version. Here's a quick list of features: Open/save modules, can have multiple modules open at once Edit pattern data via keyboard (OpenMPT style keybindings, will be configurable in later versions) Transpose selection by note/octave or by a custom semitone offset (Ctrl+T) Reverse selected rows (Ctrl+R) Cut/Copy/Paste pattern data using system clipboard Mix paste (only the unset columns get set to the pasted data) Move pattern data via drag n drop Music playback, pattern cursor follows the current playing row Edit waveforms visually via a graph control, by selecting a preset or by manually entering waveram data Edit instrument sequences visually Instruments and Waveforms can be previewed using the piano control (or by keyboard). Undo/Redo functionality for song order and pattern editing. Audio diagnostics dialog (Help > Audio Diagnostics) for debugging sound output / buffer issues. [0.1.0] - 2020-09-20 Added The main UI has been started Wave editor dialog, user can edit waveforms and preview them using a piano control Configuration dialog, user can select an audio device, set buffer size and volume Instrument editor dialog DeviceManager and DeviceTable classes in the audio library demo_device_manager demo lists all available host api and output devices Changed PlaybackQueue can use any portaudio device instead of the default one Reorganized library header folders MusicRuntime only updates \"locked\" channels Rewrote Engine class to use MusicRuntime class Removed File class Old ui code (instedit) [0.0.6] - 2020-08-09 Added song_demo, demonstrates playback of a Song Engine class, handles playback for Songs and sound effects FrequencyControl, frequency effect logic for channels 1, 2 and 3 Note lookup table for channel 4, NOTE_NOISE_TABLE MusicRuntime, handles song playback (replaces SongRuntime + PatternRutime + TrackRuntime) NoteControl, handles note triggers and cuts with an optional delay. PatternCursor, utility class for random access/iteration of a Pattern RuntimeContext struct, utility struct containing Synth and Table references Timer class, used for tempo/speed Changed Fixed warnings for ubuntu build Mixer no longer uses sigma approximation when calculating the STEP_TABLE, this was done as an experiment and also worked as a low pass filter. Filtering will be done elsewhere in the future. added utility method Synth::setFrequency added several new effects. Effects are now categorized by pattern, track and frequency. Removed InstrumentRuntime, TrackRuntime, PatternRuntime and SongRuntime classes. These are being replaced with the newly added classes in the engine folder. Q53.hpp, replaced by Speed.hpp [0.0.5] - 2020-04-24 Added PatternMaster class, container for all tracks in a Song Synth::reset() and for all APU components also Changed Instruments are now a sequence of commands, 1 command per frame All runtime classes have been rewritten to use the new pattern format Song serialization has been rewritten to use new pattern format File format signature changed so that it starts with a non-printable character TrackRuntime and InstrumentRuntime are now template classes Patterns function like FamiTracker's, a pattern is a combination of resuable track data Pattern is now a tuple of Track references Order is now a POD struct of track ids, one for each channel Track no longer behaves like an iterator and now contains data pattern demo now plays a recreation of national park from pokemon G/S/C implemented writeAll method in PlaybackQueue PlaybackQueue uses standard library for sleeping instead of using Pa_Sleep Synth methods now have noexcept and const qualifiers where applicable Fix issue in Wav writer, where the sample count in the fact chunk was incorrect for multichannel data. The Mixer and Synth sampling rates can now be changed SongRuntime is now single-use, or, you can no longer set a new song Removed Instruction struct, no longer needed PatternRuntime::reset() [0.0.4] - 2020-04-01 Added Wav class, for writing wav files (only supports 32-bit float format) Generator class, base class for PulseGen, WaveGen and NoiseGen PulseGen class, similar to the previously removed PulseChannel WaveGen class, similar to the previously removed WaveChannel Mixer class, adds bandlimited steps to left/right channels Sequencer class, similar to the previously removed one Changed Minimum required C++ standard is now C++17 PlaybackQueue uses float samples instead of int16_t Synth was rewritten to use emulation based synthesis, generates samples on a per frame basis. Synth can now read and write APU registers reset() renamed to restart() in synth APU components setRegister renamed to writeRegister Sweep has its own shadow register and now longer uses the channel's on trigger (this behavior now matches the hardware) Sweep and Envelope register contents get applied on restart Removed include/trackerboy/synth/utils.hpp, no longer being used libtrackerboy/synth/test_Osc.cpp, was unused Osc, PulseOsc and WaveOsc, since we are now using emulation based synthesis [0.0.3] - 2020-03-09 Added More test cases for File tests for Table<T> misc/genstep.py, similar to gensinc.py, generates bandlimited step sets for Osc implementation for WaveOsc NoiseGen, buffered version of NoiseChannel Envelope, moved code from EnvChannel here (will replace EnvChannel) Sweep class, replaces SweepPulseChannel HardwareFile struct (replaces ChannelFile) Changed Fix exception being thrown when attempting to insert into table of size one less than maximum Rewrote Osc class. Subclasses must edit the delta buffer manually instead of using deltaSet . Osc no longer uses sinc sets. It uses bandlimited steps instead, similiar to blargg's http://www.slack.net/~ant/bl-synth/11.implementation.html. Osc::generate uses floats for samples instead of int16_t. Samples range from -1.0-1.0, exceeding both limits due to overshoot (so volume will need to be adjusted or clipping will occur). Mixer no longer emulates terminal volume/panning (tracker doesn't use it) Mixer works with sample buffers as opposed to individual samples from each channel Length counters are no longer emulated by the Synth Mixer and Sequencer were moved into Synth, as only the synth used these internally. Removed Osc::deltaSet as only WaveOsc needed this method Osc::setMute and Osc::muted , replaced by Osc::disable and Osc::disabled misc/gensinc.py no longer needed, replaced by genstep.py Channel, EnvChannel, PulseChannel, SweepPulseChannel, WaveChannel, NoiseChannel, ChannelFile, Mixer and Sequencer classes [0.0.2] - 2020-02-05 Added File::loadTable<T> method uint16_t overload for correctEndian Destructor and copy constructor to Table<T> Table<T>::insert methods Table<T>::clear Version struct + operator overloads Changed Rewrote implementation for Table<T> , no longer uses std::unordered_map Uses a vector for the item data, and a 256 uint8_t array that maps an id to an index in the vector. Allowing for faster lookups but a slight performance loss when removing items. Refactored pattern_demo.cpp and File.cpp to use new Table implementation table size is now a 2 byte field when saving/loading add setSpeed() overload to calculate speed from tempo/rpb settings. Song no longer calculates speed when tempo or rpb is set. Removed Table<T>::add , Table<T>::set , as these methods are no longer needed as the insert methods should be used instead. [0.0.1] - 2020-02-01 Added This CHANGELOG.md file to serve as a changelog for any new features, removals deprecations and so on for the project as a whole. Changed README.md, added a roadmap section to list planned features and the order in which they are worked on. ORGANIZATION.md, added a guideline to use unix style newlines in all files CMakeLists.txt, updated project version to v0.0.1","title":"Change log"},{"location":"about/changelog/#unreleased","text":"","title":"[Unreleased]"},{"location":"about/changelog/#added","text":"Command line argument parsing, you can now open a module on application startup General tab in Config dialog for changing basic settings. Appearance tab in Config dialog for changing fonts, colors and other settings Keyboard tab in Config dialog for changing keyboard layout and editing keybinds, as well as shortcut key sequences. Colors for the audio scope and graph editors are now customizable Autosave. Disabled by default, enable in the General tab in Config. Jxy effect for setting the global volume scale. Menu action in Tracker for reseting the global volume (Tracker|Reset global volume) Context menu for pattern editor Action for replacing all selected instrument columns with the current instrument (Edit|Replace instrument)","title":"Added"},{"location":"about/changelog/#changed","text":"Combined the Sound and Midi tabs in the Configuration dialog (Sound + MIDI) AZERTY keyboard layout uses French AZERTY QWERTZ keyboard layout uses German T3 CascadiaMono is no longer the default font (Windows) Consolas is now the default font, falling back to Courier New if not available No longer using dock widgets, Instruments + Waveforms are now located to the right of the pattern editor. Pattern editor row numbers can be displayed in decimal (default is hexadecimal) Cursor wrap can now be disabled in General settings Hxx effect (set sweep register) now works. Crash save filename no longer using colons in the timestamp (this resulted in using an illegal filename on windows).","title":"Changed"},{"location":"about/changelog/#fixed","text":"Issue with Instrument Editor not properly updating when changing instruments Hitting enter in the sequence editor line edit opens the Wave editor Bug when saving a new module overwrites the last opened one instead of prompting the user for a new location.","title":"Fixed"},{"location":"about/changelog/#removed","text":"Synthesizer quality setting in Sound configuration","title":"Removed"},{"location":"about/changelog/#050-2021-09-10","text":"","title":"[0.5.0] - 2021-09-10"},{"location":"about/changelog/#added_1","text":"Instrument + Waveform list views for selecting/adding instruments/waveforms Effect columns can now be hidden/added for each track Multiple song support, modules can now store 1-256 songs Backwards compatibilty for 0.0 (Rev A) modules Tempo calculator dialog (Song > Tempo calculator...) Crash handler. Attempts to save a copy of the module after a fatal error Module properties dialog for editing the song list, module information and framerate/system. Song next/previous actions for changing the current song Song selector in Sidebar for selecting the current song Comments dialog for editing module comments File menu now shows a list of recently opened/saved modules","title":"Added"},{"location":"about/changelog/#changed_1","text":"Back to using miniaudio instead of RtAudio for audio playback Trackerboy is now SDI instead of MDI (only one module can be open at a time). Initial window size is set to a maximum of 1280x720 Module file format is now at 1.0 (Rev B) Config file is now more human friendly Redesigned header for the pattern editor Reduced spacing between columns in pattern editor Rewrote OrderEditor using a custom widget instead of QTableView + OrderModel Instrument and Waveform editors are now dialogs instead of docks. Octave decrease/increase shortcut changed from numpad / * to Ctrl+[ and Ctrl+]","title":"Changed"},{"location":"about/changelog/#fixed_1","text":"issue #2 - Exx not taking immediate effect (also fixes V0x and I0x not taking immediate effect as well) issue #3 - PulseAudio hang","title":"Fixed"},{"location":"about/changelog/#removed_1","text":"Module tree view (replaced by instrument and waveform docks) Instrument select toolbar (functionality replaced by selecting an instrument in the instruments dock) Patterns and Tempo spinboxes in Song settings editor","title":"Removed"},{"location":"about/changelog/#040-2021-07-07","text":"","title":"[0.4.0] - 2021-07-07"},{"location":"about/changelog/#added_2","text":"MIDI support. You can now use a MIDI input device to input notes / preview instruments Order editor has increment/decrement and set operations again Oscilloscope visualizer Icons for cut/copy/paste","title":"Added"},{"location":"about/changelog/#changed_2","text":"32-bit builds are now supported Using RtAudio instead of miniaudio for audio playback Some improvements to the audio diagnostics dialog Fxx effect changes the speed immediately now (previously it only took effect on the next row) Status bar is now updated with speed/tempo, time elapsed and position of current song being played. Cursor row is locked when playing in follow-mode Selecting an order while playing in follow-mode jumps to it","title":"Changed"},{"location":"about/changelog/#fixed_2","text":"Crash when creating new module on linux Copy/Paste bugs when copying effect columns","title":"Fixed"},{"location":"about/changelog/#031-2021-06-23","text":"","title":"[0.3.1] - 2021-06-23"},{"location":"about/changelog/#changed_3","text":"Play and stop shortcut only triggers when pattern editor has focus","title":"Changed"},{"location":"about/changelog/#fixed_3","text":"Note previews not working right on CH4 Current track not updating in order editor","title":"Fixed"},{"location":"about/changelog/#030-2021-06-22","text":"","title":"[0.3.0] - 2021-06-22"},{"location":"about/changelog/#added_3","text":"Note previews when inputting notes in the pattern editor Pattern repeat mode Step mode playback Input toolbar (set the octave and edit step) Instrument toolbar (combobox for the current instrument) Song menu, contains actions for adding/removing orders Sidebar widget, combines song settings + order editor Icon for configuration Keybinds for tracker actions (play, stop, etc) Add \"play and stop\" shortcut (pressing enter plays, pressing it again stops)","title":"Added"},{"location":"about/changelog/#changed_4","text":"No longer need to have record mode on when deleting, transposing, etc (record mode now only applies to setting notes, instruments and effects) Arpeggio editor graph is now centered at 0 Moved stuff from PatternEditor to separate toolbars Renamed Delete action in Edit menu to Erase View menu is now between Tracker and Window Fix \"set volume on trigger\" checkbox not updating when changing instruments Fix pattern previews not showing up on module load Fix order move up/down actions not disabling/enabling when user changes patterns Setting a note cut does not set the instrument column","title":"Changed"},{"location":"about/changelog/#removed_2","text":"PatternEditor toolbar (now is part of the main application toolbar) Order increment/decrement and set controls","title":"Removed"},{"location":"about/changelog/#020-2021-06-15","text":"The project has changed dramatically since the last release so changes will not be listed for this version. Here's a quick list of features: Open/save modules, can have multiple modules open at once Edit pattern data via keyboard (OpenMPT style keybindings, will be configurable in later versions) Transpose selection by note/octave or by a custom semitone offset (Ctrl+T) Reverse selected rows (Ctrl+R) Cut/Copy/Paste pattern data using system clipboard Mix paste (only the unset columns get set to the pasted data) Move pattern data via drag n drop Music playback, pattern cursor follows the current playing row Edit waveforms visually via a graph control, by selecting a preset or by manually entering waveram data Edit instrument sequences visually Instruments and Waveforms can be previewed using the piano control (or by keyboard). Undo/Redo functionality for song order and pattern editing. Audio diagnostics dialog (Help > Audio Diagnostics) for debugging sound output / buffer issues.","title":"[0.2.0] - 2021-06-15"},{"location":"about/changelog/#010-2020-09-20","text":"","title":"[0.1.0] - 2020-09-20"},{"location":"about/changelog/#added_4","text":"The main UI has been started Wave editor dialog, user can edit waveforms and preview them using a piano control Configuration dialog, user can select an audio device, set buffer size and volume Instrument editor dialog DeviceManager and DeviceTable classes in the audio library demo_device_manager demo lists all available host api and output devices","title":"Added"},{"location":"about/changelog/#changed_5","text":"PlaybackQueue can use any portaudio device instead of the default one Reorganized library header folders MusicRuntime only updates \"locked\" channels Rewrote Engine class to use MusicRuntime class","title":"Changed"},{"location":"about/changelog/#removed_3","text":"File class Old ui code (instedit)","title":"Removed"},{"location":"about/changelog/#006-2020-08-09","text":"","title":"[0.0.6] - 2020-08-09"},{"location":"about/changelog/#added_5","text":"song_demo, demonstrates playback of a Song Engine class, handles playback for Songs and sound effects FrequencyControl, frequency effect logic for channels 1, 2 and 3 Note lookup table for channel 4, NOTE_NOISE_TABLE MusicRuntime, handles song playback (replaces SongRuntime + PatternRutime + TrackRuntime) NoteControl, handles note triggers and cuts with an optional delay. PatternCursor, utility class for random access/iteration of a Pattern RuntimeContext struct, utility struct containing Synth and Table references Timer class, used for tempo/speed","title":"Added"},{"location":"about/changelog/#changed_6","text":"Fixed warnings for ubuntu build Mixer no longer uses sigma approximation when calculating the STEP_TABLE, this was done as an experiment and also worked as a low pass filter. Filtering will be done elsewhere in the future. added utility method Synth::setFrequency added several new effects. Effects are now categorized by pattern, track and frequency.","title":"Changed"},{"location":"about/changelog/#removed_4","text":"InstrumentRuntime, TrackRuntime, PatternRuntime and SongRuntime classes. These are being replaced with the newly added classes in the engine folder. Q53.hpp, replaced by Speed.hpp","title":"Removed"},{"location":"about/changelog/#005-2020-04-24","text":"","title":"[0.0.5] - 2020-04-24"},{"location":"about/changelog/#added_6","text":"PatternMaster class, container for all tracks in a Song Synth::reset() and for all APU components also","title":"Added"},{"location":"about/changelog/#changed_7","text":"Instruments are now a sequence of commands, 1 command per frame All runtime classes have been rewritten to use the new pattern format Song serialization has been rewritten to use new pattern format File format signature changed so that it starts with a non-printable character TrackRuntime and InstrumentRuntime are now template classes Patterns function like FamiTracker's, a pattern is a combination of resuable track data Pattern is now a tuple of Track references Order is now a POD struct of track ids, one for each channel Track no longer behaves like an iterator and now contains data pattern demo now plays a recreation of national park from pokemon G/S/C implemented writeAll method in PlaybackQueue PlaybackQueue uses standard library for sleeping instead of using Pa_Sleep Synth methods now have noexcept and const qualifiers where applicable Fix issue in Wav writer, where the sample count in the fact chunk was incorrect for multichannel data. The Mixer and Synth sampling rates can now be changed SongRuntime is now single-use, or, you can no longer set a new song","title":"Changed"},{"location":"about/changelog/#removed_5","text":"Instruction struct, no longer needed PatternRuntime::reset()","title":"Removed"},{"location":"about/changelog/#004-2020-04-01","text":"","title":"[0.0.4] - 2020-04-01"},{"location":"about/changelog/#added_7","text":"Wav class, for writing wav files (only supports 32-bit float format) Generator class, base class for PulseGen, WaveGen and NoiseGen PulseGen class, similar to the previously removed PulseChannel WaveGen class, similar to the previously removed WaveChannel Mixer class, adds bandlimited steps to left/right channels Sequencer class, similar to the previously removed one","title":"Added"},{"location":"about/changelog/#changed_8","text":"Minimum required C++ standard is now C++17 PlaybackQueue uses float samples instead of int16_t Synth was rewritten to use emulation based synthesis, generates samples on a per frame basis. Synth can now read and write APU registers reset() renamed to restart() in synth APU components setRegister renamed to writeRegister Sweep has its own shadow register and now longer uses the channel's on trigger (this behavior now matches the hardware) Sweep and Envelope register contents get applied on restart","title":"Changed"},{"location":"about/changelog/#removed_6","text":"include/trackerboy/synth/utils.hpp, no longer being used libtrackerboy/synth/test_Osc.cpp, was unused Osc, PulseOsc and WaveOsc, since we are now using emulation based synthesis","title":"Removed"},{"location":"about/changelog/#003-2020-03-09","text":"","title":"[0.0.3] - 2020-03-09"},{"location":"about/changelog/#added_8","text":"More test cases for File tests for Table<T> misc/genstep.py, similar to gensinc.py, generates bandlimited step sets for Osc implementation for WaveOsc NoiseGen, buffered version of NoiseChannel Envelope, moved code from EnvChannel here (will replace EnvChannel) Sweep class, replaces SweepPulseChannel HardwareFile struct (replaces ChannelFile)","title":"Added"},{"location":"about/changelog/#changed_9","text":"Fix exception being thrown when attempting to insert into table of size one less than maximum Rewrote Osc class. Subclasses must edit the delta buffer manually instead of using deltaSet . Osc no longer uses sinc sets. It uses bandlimited steps instead, similiar to blargg's http://www.slack.net/~ant/bl-synth/11.implementation.html. Osc::generate uses floats for samples instead of int16_t. Samples range from -1.0-1.0, exceeding both limits due to overshoot (so volume will need to be adjusted or clipping will occur). Mixer no longer emulates terminal volume/panning (tracker doesn't use it) Mixer works with sample buffers as opposed to individual samples from each channel Length counters are no longer emulated by the Synth Mixer and Sequencer were moved into Synth, as only the synth used these internally.","title":"Changed"},{"location":"about/changelog/#removed_7","text":"Osc::deltaSet as only WaveOsc needed this method Osc::setMute and Osc::muted , replaced by Osc::disable and Osc::disabled misc/gensinc.py no longer needed, replaced by genstep.py Channel, EnvChannel, PulseChannel, SweepPulseChannel, WaveChannel, NoiseChannel, ChannelFile, Mixer and Sequencer classes","title":"Removed"},{"location":"about/changelog/#002-2020-02-05","text":"","title":"[0.0.2] - 2020-02-05"},{"location":"about/changelog/#added_9","text":"File::loadTable<T> method uint16_t overload for correctEndian Destructor and copy constructor to Table<T> Table<T>::insert methods Table<T>::clear Version struct + operator overloads","title":"Added"},{"location":"about/changelog/#changed_10","text":"Rewrote implementation for Table<T> , no longer uses std::unordered_map Uses a vector for the item data, and a 256 uint8_t array that maps an id to an index in the vector. Allowing for faster lookups but a slight performance loss when removing items. Refactored pattern_demo.cpp and File.cpp to use new Table implementation table size is now a 2 byte field when saving/loading add setSpeed() overload to calculate speed from tempo/rpb settings. Song no longer calculates speed when tempo or rpb is set.","title":"Changed"},{"location":"about/changelog/#removed_8","text":"Table<T>::add , Table<T>::set , as these methods are no longer needed as the insert methods should be used instead.","title":"Removed"},{"location":"about/changelog/#001-2020-02-01","text":"","title":"[0.0.1] - 2020-02-01"},{"location":"about/changelog/#added_10","text":"This CHANGELOG.md file to serve as a changelog for any new features, removals deprecations and so on for the project as a whole.","title":"Added"},{"location":"about/changelog/#changed_11","text":"README.md, added a roadmap section to list planned features and the order in which they are worked on. ORGANIZATION.md, added a guideline to use unix style newlines in all files CMakeLists.txt, updated project version to v0.0.1","title":"Changed"},{"location":"about/license/","text":"License MIT License Copyright (c) 2019 stoneface Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/license/#license","text":"MIT License Copyright (c) 2019 stoneface Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/roadmap/","text":"Roadmap This page is currently under construction.","title":"Roadmap"},{"location":"about/roadmap/#roadmap","text":"This page is currently under construction.","title":"Roadmap"},{"location":"hardware/","text":"Hardware Primer This page is currently under construction.","title":"Overview"},{"location":"hardware/#hardware-primer","text":"This page is currently under construction.","title":"Hardware Primer"},{"location":"hardware/noise-channel/","text":"The noise channel This page is currently under construction.","title":"Noise channel"},{"location":"hardware/noise-channel/#the-noise-channel","text":"This page is currently under construction.","title":"The noise channel"},{"location":"hardware/pulse-channel/","text":"The pulse channels This page is currently under construction.","title":"Pulse channel"},{"location":"hardware/pulse-channel/#the-pulse-channels","text":"This page is currently under construction.","title":"The pulse channels"},{"location":"hardware/sweep/","text":"Frequency sweep This page is currently under construction.","title":"Frequency sweep"},{"location":"hardware/sweep/#frequency-sweep","text":"This page is currently under construction.","title":"Frequency sweep"},{"location":"hardware/volume-control/","text":"Volume control and panning This page is currently under construction.","title":"Volume control and panning"},{"location":"hardware/volume-control/#volume-control-and-panning","text":"This page is currently under construction.","title":"Volume control and panning"},{"location":"hardware/wave-channel/","text":"The wave channel This page is currently under construction.","title":"Wave channel"},{"location":"hardware/wave-channel/#the-wave-channel","text":"This page is currently under construction.","title":"The wave channel"},{"location":"interface/","text":"Overview This page is currently under construction.","title":"Overview"},{"location":"interface/#overview","text":"This page is currently under construction.","title":"Overview"},{"location":"interface/audio-diagnostics/","text":"Audio diagnostics This page is currently under construction.","title":"Audio diagnostics"},{"location":"interface/audio-diagnostics/#audio-diagnostics","text":"This page is currently under construction.","title":"Audio diagnostics"},{"location":"interface/comments/","text":"Comments This page is currently under construction.","title":"Comments"},{"location":"interface/comments/#comments","text":"This page is currently under construction.","title":"Comments"},{"location":"interface/history/","text":"History This page is currently under construction.","title":"History"},{"location":"interface/history/#history","text":"This page is currently under construction.","title":"History"},{"location":"interface/instrument-editor/","text":"The instrument editor This page is currently under construction.","title":"Instrument editor"},{"location":"interface/instrument-editor/#the-instrument-editor","text":"This page is currently under construction.","title":"The instrument editor"},{"location":"interface/instruments-waveforms/","text":"The instruments/waveforms panel This page is currently under construction.","title":"Instruments/Waveforms panel"},{"location":"interface/instruments-waveforms/#the-instrumentswaveforms-panel","text":"This page is currently under construction.","title":"The instruments/waveforms panel"},{"location":"interface/module-properties/","text":"Module properties This page is currently under construction.","title":"Module properties"},{"location":"interface/module-properties/#module-properties","text":"This page is currently under construction.","title":"Module properties"},{"location":"interface/pattern-editor/","text":"The pattern editor This page is currently under construction.","title":"Pattern editor"},{"location":"interface/pattern-editor/#the-pattern-editor","text":"This page is currently under construction.","title":"The pattern editor"},{"location":"interface/shortcuts/","text":"Shortcuts This page is currently under construction.","title":"Shortcuts"},{"location":"interface/shortcuts/#shortcuts","text":"This page is currently under construction.","title":"Shortcuts"},{"location":"interface/sidebar/","text":"The sidebar This page is currently under construction.","title":"Sidebar"},{"location":"interface/sidebar/#the-sidebar","text":"This page is currently under construction.","title":"The sidebar"},{"location":"interface/statusbar/","text":"Status bar This page is currently under construction.","title":"Status bar"},{"location":"interface/statusbar/#status-bar","text":"This page is currently under construction.","title":"Status bar"},{"location":"interface/toolbars/","text":"Toolbars This page is currently under construction.","title":"Toolbars"},{"location":"interface/toolbars/#toolbars","text":"This page is currently under construction.","title":"Toolbars"},{"location":"interface/waveform-editor/","text":"The waveform editor This page is currently under construction.","title":"Waveform editor"},{"location":"interface/waveform-editor/#the-waveform-editor","text":"This page is currently under construction.","title":"The waveform editor"},{"location":"interface/configuration/appearance/","text":"Appearance configuration This page is currently under construction.","title":"Appearance"},{"location":"interface/configuration/appearance/#appearance-configuration","text":"This page is currently under construction.","title":"Appearance configuration"},{"location":"interface/configuration/general/","text":"General configuration This page is currently under construction.","title":"General"},{"location":"interface/configuration/general/#general-configuration","text":"This page is currently under construction.","title":"General configuration"},{"location":"interface/configuration/keyboard/","text":"Keyboard configuration This page is currently under construction.","title":"Keyboard"},{"location":"interface/configuration/keyboard/#keyboard-configuration","text":"This page is currently under construction.","title":"Keyboard configuration"},{"location":"interface/configuration/sound/","text":"Sound and MIDI configuration This page is currently under construction.","title":"Sound / Midi"},{"location":"interface/configuration/sound/#sound-and-midi-configuration","text":"This page is currently under construction.","title":"Sound and MIDI configuration"},{"location":"interface/menus/edit/","text":"Edit This page is currently under construction.","title":"Edit"},{"location":"interface/menus/edit/#edit","text":"This page is currently under construction.","title":"Edit"},{"location":"interface/menus/file/","text":"File This page is currently under construction.","title":"File"},{"location":"interface/menus/file/#file","text":"This page is currently under construction.","title":"File"},{"location":"interface/menus/help/","text":"Help This page is currently under construction.","title":"Help"},{"location":"interface/menus/help/#help","text":"This page is currently under construction.","title":"Help"},{"location":"interface/menus/instruments/","text":"Instruments This page is currently under construction.","title":"Instruments"},{"location":"interface/menus/instruments/#instruments","text":"This page is currently under construction.","title":"Instruments"},{"location":"interface/menus/module/","text":"Module This page is currently under construction.","title":"Module"},{"location":"interface/menus/module/#module","text":"This page is currently under construction.","title":"Module"},{"location":"interface/menus/song/","text":"Song This page is currently under construction.","title":"Song"},{"location":"interface/menus/song/#song","text":"This page is currently under construction.","title":"Song"},{"location":"interface/menus/tracker/","text":"Tracker This page is currently under construction.","title":"Tracker"},{"location":"interface/menus/tracker/#tracker","text":"This page is currently under construction.","title":"Tracker"},{"location":"interface/menus/view/","text":"View This page is currently under construction.","title":"View"},{"location":"interface/menus/view/#view","text":"This page is currently under construction.","title":"View"},{"location":"interface/menus/waveforms/","text":"Waveforms This page is currently under construction.","title":"Waveforms"},{"location":"interface/menus/waveforms/#waveforms","text":"This page is currently under construction.","title":"Waveforms"},{"location":"tracker/","text":"Overview This page is currently under construction.","title":"Overview"},{"location":"tracker/#overview","text":"This page is currently under construction.","title":"Overview"},{"location":"tracker/channel-lock/","text":"The channel lock mechanism This page is currently under construction.","title":"Channel locking"},{"location":"tracker/channel-lock/#the-channel-lock-mechanism","text":"This page is currently under construction.","title":"The channel lock mechanism"},{"location":"tracker/effect-list/","text":"Effect list Below are all available effects. An effect is composed of a type and a parameter. Some effects do not require a parameter. Note that the effects below have similar syntax and function to Famitracker's effect set. 0xy - Arpeggio x - 1st note y - 2nd note The arpeggio effect simulates a chord by alternating each note in the chord every frame. The chord is made up of the current note and the effect's parameters. Each parameter is the number of semitones from the current note. The order of the arpeggio is the current note, calculated note from parameter x followed by the calculated note from parameter y. If a calculated note exceeds the highest, the highest will be used. Use 000 to turn off the effect. 1xx - Pitch slide up xx - speed, in pitch units / frame Modulates the channel's frequency upward using the given speed every frame. Note that the perceived change in frequency is not linear. Use 100 to turn off the effect. The effect will not increase the frequency past the channel's maximum. 2xx - Pitch slide down xx - speed, in pitch units / frame Same as 1xx but modulates the frequency downward. 3xx - Automatic Portamento xx - speed, in pitch units / frame Automatically slides to new notes with speed xx. Use 300 to disable the effect. 4xy - Square vibrato x - extent, in tune units y - speed, number of frames per oscillation in pitch Modulates the channel's frequency using a square vibrato. The channel's frequency alternates between +/- the extent (x). The speed, y, is the number of frames needed for a single oscillation (1: fastest, F: slowest). To disable, use an extent of 0. 5xx - Set vibrato delay xx - delay, in frames The amount of frames to wait before starting the vibrato effect. By default, all channels have a vibrato delay of 0, or instantaneous vibrato. The delay starts on every note trigger. Bxx - Pattern goto xx - the index of the pattern Jumps to pattern xx in the order. If xx is >= the size of the order, the last pattern is used. The current row finishes playing before jumping to the pattern. If multiple effects of this type are used on the same row, the last one used is the one that gets performed. C00 - Pattern halt Stops playback of the song. Note that halting is immediate, the row the effect lies on is not performed. Dxx - Pattern skip xx - the row to start on Skips to the next pattern in the order and starts on row xx. If the current pattern is the last one in the order, the first pattern in the order is jumped to. Similar to Bxx, the current row finishes playing before jumping. Fxx - Set speed xx - the speed, in Q4.4 format Changes the playback speed. The parameter is in Q4.4 format and must be in range 1.0 and 15.0, inclusive. For more details on how speed works in trackerboy, see the speed page. Exx - Set envelope xx - the envelope Sets the channel's envelope setting. The type of this setting depends on the channel the effect is used. For CH3: Changes the current waveform in use. For CH1, CH2 and CH4: Changes the channel's volume envelope. The volume envelope parameter is composed of two nibbles - initial volume and mode. The initial volume is the starting volume of the envelope and ranges from 0-F. The mode determines the direction and speed of the envelope. A mode of 1-7 attenuates with 1 being the fastest. A mode of 9-F amplifies with 9 being the fastest. A mode of 0 or 8 is constant volume. Gxx - Note delay xx - number of frames to delay the note Delays performance of the row by a given number of frames. If a non-empty row is encountered before the delay expires, the delayed row is not performed. Hxx - Set sweep register xx - value to set Sets the sweep register (NR10) to the given value. Can only be used on CH1. The sweep register is written, CH1 is retriggered and then the sweep register is cleared. For an overview on the sweep register see Frequency sweep . I0x - Set channel panning x - panning to set Sets the channel's panning to x. Valid values for x are 0 (mute), 1 (left), 2 (right) and 3 (middle). Using this effect may result in a \"pop\" sound due to a change in the DC offset. Jxy - Set global volume x - volume of left terminal (0-7) y - volume of right terminal (0-7) Sets the global volume scale. This effect writes to the NR50 register. Note that a volume of 0 is not mute. By default, both terminals have a volume of 7. Warning: This effects the volume of both music and SFX. L00 - Lock channel (music priority) This effect is currently not implemented. Pxx - Fine tuning xx - tune offset in pitch units Sets a constant pitch offset for the track. The parameter is in biased representation with K = 0x80. A parameter of 0x80 means the track is in tune or has no pitch offset. A parameter of 81 means that the track is pitch adjusted by +1. By default, all tracks have a tune setting of 0x80. Qxy - Note slide up x - slide speed, in pitch units / frame y - semitones from the current note to slide to Sets a triggered note slide for the current track. The track's frequency will slide towards the frequency of the note calculated from adding y semitones to the current note. The x parameter is the speed of the slide, in pitch units per frame + 1 (0 is the slowest speed and F is the fastest). If the targeted note exceeds the highest possible one (B-8), then the highest will be used instead. Rxy - Note slide down x - slide speed, in pitch units / frame y - semitones from the current note to slide to Same as Qxy , except the targeted note is the current note minus y semitones. If the targeted note is less than the lowest, the lowest is used instead. Sxx - Delayed note cut xx - delay, in frames Cuts the note in a given number of frames. Can be combined with Gxx . Txx - Play sound effect xx - sound effect id to play This effect is not currently implemented. V0x - Set channel timbre x - timbre to set Sets the channel's timbre. Timbre is a setting specific to a channel. For CH1, CH2: Duty setting: 0 - 12.5% Duty 1 - 25% Duty 2 - 50% Duty 3 - 75% Duty (default) For CH3: Wave volume: 0 - Mute 1 - 25% volume 2 - 50% volume 3 - 100% volume (default) For CH4: Step-width of the LFSR: 0 - 15-bit LFSR (default) 1 - 7-bit LFSR","title":"Effect list"},{"location":"tracker/effect-list/#effect-list","text":"Below are all available effects. An effect is composed of a type and a parameter. Some effects do not require a parameter. Note that the effects below have similar syntax and function to Famitracker's effect set.","title":"Effect list"},{"location":"tracker/effect-list/#0xy-arpeggio","text":"x - 1st note y - 2nd note The arpeggio effect simulates a chord by alternating each note in the chord every frame. The chord is made up of the current note and the effect's parameters. Each parameter is the number of semitones from the current note. The order of the arpeggio is the current note, calculated note from parameter x followed by the calculated note from parameter y. If a calculated note exceeds the highest, the highest will be used. Use 000 to turn off the effect.","title":"0xy - Arpeggio"},{"location":"tracker/effect-list/#1xx-pitch-slide-up","text":"xx - speed, in pitch units / frame Modulates the channel's frequency upward using the given speed every frame. Note that the perceived change in frequency is not linear. Use 100 to turn off the effect. The effect will not increase the frequency past the channel's maximum.","title":"1xx - Pitch slide up"},{"location":"tracker/effect-list/#2xx-pitch-slide-down","text":"xx - speed, in pitch units / frame Same as 1xx but modulates the frequency downward.","title":"2xx - Pitch slide down"},{"location":"tracker/effect-list/#3xx-automatic-portamento","text":"xx - speed, in pitch units / frame Automatically slides to new notes with speed xx. Use 300 to disable the effect.","title":"3xx - Automatic Portamento"},{"location":"tracker/effect-list/#4xy-square-vibrato","text":"x - extent, in tune units y - speed, number of frames per oscillation in pitch Modulates the channel's frequency using a square vibrato. The channel's frequency alternates between +/- the extent (x). The speed, y, is the number of frames needed for a single oscillation (1: fastest, F: slowest). To disable, use an extent of 0.","title":"4xy - Square vibrato"},{"location":"tracker/effect-list/#5xx-set-vibrato-delay","text":"xx - delay, in frames The amount of frames to wait before starting the vibrato effect. By default, all channels have a vibrato delay of 0, or instantaneous vibrato. The delay starts on every note trigger.","title":"5xx - Set vibrato delay"},{"location":"tracker/effect-list/#bxx-pattern-goto","text":"xx - the index of the pattern Jumps to pattern xx in the order. If xx is >= the size of the order, the last pattern is used. The current row finishes playing before jumping to the pattern. If multiple effects of this type are used on the same row, the last one used is the one that gets performed.","title":"Bxx - Pattern goto"},{"location":"tracker/effect-list/#c00-pattern-halt","text":"Stops playback of the song. Note that halting is immediate, the row the effect lies on is not performed.","title":"C00 - Pattern halt"},{"location":"tracker/effect-list/#dxx-pattern-skip","text":"xx - the row to start on Skips to the next pattern in the order and starts on row xx. If the current pattern is the last one in the order, the first pattern in the order is jumped to. Similar to Bxx, the current row finishes playing before jumping.","title":"Dxx - Pattern skip"},{"location":"tracker/effect-list/#fxx-set-speed","text":"xx - the speed, in Q4.4 format Changes the playback speed. The parameter is in Q4.4 format and must be in range 1.0 and 15.0, inclusive. For more details on how speed works in trackerboy, see the speed page.","title":"Fxx - Set speed"},{"location":"tracker/effect-list/#exx-set-envelope","text":"xx - the envelope Sets the channel's envelope setting. The type of this setting depends on the channel the effect is used.","title":"Exx - Set envelope"},{"location":"tracker/effect-list/#for-ch3","text":"Changes the current waveform in use.","title":"For CH3:"},{"location":"tracker/effect-list/#for-ch1-ch2-and-ch4","text":"Changes the channel's volume envelope. The volume envelope parameter is composed of two nibbles - initial volume and mode. The initial volume is the starting volume of the envelope and ranges from 0-F. The mode determines the direction and speed of the envelope. A mode of 1-7 attenuates with 1 being the fastest. A mode of 9-F amplifies with 9 being the fastest. A mode of 0 or 8 is constant volume.","title":"For CH1, CH2 and CH4:"},{"location":"tracker/effect-list/#gxx-note-delay","text":"xx - number of frames to delay the note Delays performance of the row by a given number of frames. If a non-empty row is encountered before the delay expires, the delayed row is not performed.","title":"Gxx - Note delay"},{"location":"tracker/effect-list/#hxx-set-sweep-register","text":"xx - value to set Sets the sweep register (NR10) to the given value. Can only be used on CH1. The sweep register is written, CH1 is retriggered and then the sweep register is cleared. For an overview on the sweep register see Frequency sweep .","title":"Hxx - Set sweep register"},{"location":"tracker/effect-list/#i0x-set-channel-panning","text":"x - panning to set Sets the channel's panning to x. Valid values for x are 0 (mute), 1 (left), 2 (right) and 3 (middle). Using this effect may result in a \"pop\" sound due to a change in the DC offset.","title":"I0x - Set channel panning"},{"location":"tracker/effect-list/#jxy-set-global-volume","text":"x - volume of left terminal (0-7) y - volume of right terminal (0-7) Sets the global volume scale. This effect writes to the NR50 register. Note that a volume of 0 is not mute. By default, both terminals have a volume of 7. Warning: This effects the volume of both music and SFX.","title":"Jxy - Set global volume"},{"location":"tracker/effect-list/#l00-lock-channel-music-priority","text":"This effect is currently not implemented.","title":"L00 - Lock channel (music priority)"},{"location":"tracker/effect-list/#pxx-fine-tuning","text":"xx - tune offset in pitch units Sets a constant pitch offset for the track. The parameter is in biased representation with K = 0x80. A parameter of 0x80 means the track is in tune or has no pitch offset. A parameter of 81 means that the track is pitch adjusted by +1. By default, all tracks have a tune setting of 0x80.","title":"Pxx - Fine tuning"},{"location":"tracker/effect-list/#qxy-note-slide-up","text":"x - slide speed, in pitch units / frame y - semitones from the current note to slide to Sets a triggered note slide for the current track. The track's frequency will slide towards the frequency of the note calculated from adding y semitones to the current note. The x parameter is the speed of the slide, in pitch units per frame + 1 (0 is the slowest speed and F is the fastest). If the targeted note exceeds the highest possible one (B-8), then the highest will be used instead.","title":"Qxy - Note slide up"},{"location":"tracker/effect-list/#rxy-note-slide-down","text":"x - slide speed, in pitch units / frame y - semitones from the current note to slide to Same as Qxy , except the targeted note is the current note minus y semitones. If the targeted note is less than the lowest, the lowest is used instead.","title":"Rxy - Note slide down"},{"location":"tracker/effect-list/#sxx-delayed-note-cut","text":"xx - delay, in frames Cuts the note in a given number of frames. Can be combined with Gxx .","title":"Sxx - Delayed note cut"},{"location":"tracker/effect-list/#txx-play-sound-effect","text":"xx - sound effect id to play This effect is not currently implemented.","title":"Txx - Play sound effect"},{"location":"tracker/effect-list/#v0x-set-channel-timbre","text":"x - timbre to set Sets the channel's timbre. Timbre is a setting specific to a channel.","title":"V0x - Set channel timbre"},{"location":"tracker/effect-list/#for-ch1-ch2","text":"Duty setting: 0 - 12.5% Duty 1 - 25% Duty 2 - 50% Duty 3 - 75% Duty (default)","title":"For CH1, CH2:"},{"location":"tracker/effect-list/#for-ch3_1","text":"Wave volume: 0 - Mute 1 - 25% volume 2 - 50% volume 3 - 100% volume (default)","title":"For CH3:"},{"location":"tracker/effect-list/#for-ch4","text":"Step-width of the LFSR: 0 - 15-bit LFSR (default) 1 - 7-bit LFSR","title":"For CH4:"},{"location":"tracker/glossary/","text":"Glossary This page is currently under construction.","title":"Glossary"},{"location":"tracker/glossary/#glossary","text":"This page is currently under construction.","title":"Glossary"},{"location":"tracker/instruments/","text":"Instruments This page is currently under construction.","title":"Instruments"},{"location":"tracker/instruments/#instruments","text":"This page is currently under construction.","title":"Instruments"},{"location":"tracker/octave-range/","text":"Octave range and notes This page is currently under construction.","title":"Octave range and notes"},{"location":"tracker/octave-range/#octave-range-and-notes","text":"This page is currently under construction.","title":"Octave range and notes"},{"location":"tracker/speed/","text":"Speed This page is currently under construction.","title":"Speed/Tempo"},{"location":"tracker/speed/#speed","text":"This page is currently under construction.","title":"Speed"}]}